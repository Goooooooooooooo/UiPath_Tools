<Activity mc:Ignorable="sap sap2010 sads" x:Class="Send_Mail" this:Send_Mail.in_MailAttachments="[New List(Of String)]" this:Send_Mail.in_MailTarget="ExchangeMailAccount" this:Send_Mail.in_MailForcedAddress="Fleet_RPA@smasfleet.co.jp" this:Send_Mail.in_MailIsHtmlBody="False"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:c="clr-namespace:CredentialManagement;assembly=CredentialManagement"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:si="clr-namespace:System.IO;assembly=mscorlib"
 xmlns:snm="clr-namespace:System.Net.Mail;assembly=System"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_MailDictionary" Type="InArgument(scg:IDictionary(x:String, x:String))" />
    <x:Property Name="in_MailAttachments" Type="InArgument(scg:List(x:String))" />
    <x:Property Name="in_MailTarget" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Imageを保存せずに、メール本文に貼る OR 添付の場合：Imageこの変数に代入" Name="in_MailImage" Type="InArgument(ui:Image)" />
    <x:Property Name="in_MailForcedAddress" Type="InArgument(x:String)" />
    <x:Property Name="in_MailIsHtmlBody" Type="InArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Send_Mail_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Credentials.Activities</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.Checkpoint.Activities</x:String>
      <x:String>UiPath.DataTable.Activities</x:String>
      <x:String>UiPath.Dialog.Activities</x:String>
      <x:String>UiPath.FileSystem.Activities</x:String>
      <x:String>UiPath.Framework.Activities</x:String>
      <x:String>UiPath.PowerShell.Activities</x:String>
      <x:String>UiPath.RegEx.Activities</x:String>
      <x:String>UiPath.FTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.POP3.Activities</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.XPS.Activities</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.JSON.Activities</x:String>
      <x:String>UiPath.REST.Activities</x:String>
      <x:String>UiPath.SOAP.Activities</x:String>
      <x:String>UiPath.XML.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>CredentialManagement</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Credentials.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Framework.Activities</AssemblyReference>
      <AssemblyReference>UiPath.FTP.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.Java.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>CredentialManagement</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Send Mail&#xA;in_MailAttachments：添付ファイルがなければ、New List(Of String)&#xA;in_MailTarget：Target 名&#xA;&#xA;メール本文に画像を貼りたい場合：画像を添付して、メール本文にコードを挿入して、&#xA;IsBodyHtmlのところCheckを入れます" DisplayName="Mail　送信" sap2010:WorkflowViewState.IdRef="Sequence_7">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="RetFlg" />
      <Variable x:TypeArguments="x:String" Name="OutMessage" />
      <Variable x:TypeArguments="x:String" Name="OutToAddress" />
      <Variable x:TypeArguments="x:String" Name="OutCcAddress" />
      <Variable x:TypeArguments="snm:MailMessage" Default="[New MailMessage()]" Name="MailMessage" />
      <Variable x:TypeArguments="x:String" Name="ImageUrl" />
      <Variable x:TypeArguments="x:String" Name="ForcedMailAddress" />
      <Variable x:TypeArguments="si:MemoryStream" Name="Ms" />
      <Variable x:TypeArguments="c:Credential" Default="[New CredentialManagement.Credential()]" Name="Credential" />
    </Sequence.Variables>
    <ui:CommentOut DisplayName="Comment out" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_20">
          <Sequence DisplayName="In_MailDictionary" sap2010:WorkflowViewState.IdRef="Sequence_19">
            <Assign sap2010:WorkflowViewState.IdRef="Assign_24">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:IDictionary(x:String, x:String)">[MailDictionary]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:IDictionary(x:String, x:String)">[New System.Collections.Generic.Dictionary(Of String, String)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="DataTable Columns To Dictionary" sap2010:WorkflowViewState.IdRef="Assign_32">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:IDictionary(x:String, x:String)">[MailDictionary]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">[MailDataTable.AsEnumerable.ToDictionary(Function(row) Convert.ToString(row(0)), Function(row) Convert.ToString(row(1)))]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="差出人" sap2010:WorkflowViewState.IdRef="Assign_25">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MailDictionary("差出人")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="宛先" sap2010:WorkflowViewState.IdRef="Assign_26">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MailDictionary("宛先")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="CC" sap2010:WorkflowViewState.IdRef="Assign_27">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MailDictionary("CC")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="件名" sap2010:WorkflowViewState.IdRef="Assign_28">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MailDictionary("件名")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="本文" sap2010:WorkflowViewState.IdRef="Assign_29">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MailDictionary("本文")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <ui:GetSecureCredential CredentialType="Generic" DisplayName="Get secure credential" sap2010:WorkflowViewState.IdRef="GetSecureCredential_1" Password="[Credential.SecurePassword]" PersistanceType="Enterprise" Result="[RetFlg]" Target="[In_MailTarget]" Username="[Credential.Username]" />
    <If sap2010:Annotation.AnnotationText="汎用資格情報が正しく取れなかった場合：例外を投げる" Condition="[RetFlg]" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Else>
        <Throw Exception="[New Exception(&quot;Get secure credential : Mail Failed&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
      </If.Else>
    </If>
    <Sequence DisplayName="Check Mail Domain" sap2010:WorkflowViewState.IdRef="Sequence_15">
      <Sequence.Variables>
        <Variable x:TypeArguments="s:String[]" Name="ArrToAddress" />
        <Variable x:TypeArguments="s:String[]" Name="ArrCcAddress" />
      </Sequence.Variables>
      <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[ArrToAddress]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[in_MailDictionary("宛先").Split(";"c).ToArray]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[ArrCcAddress]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[in_MailDictionary("CC").Split(";"c).ToArray]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap2010:WorkflowViewState.IdRef="Assign_16">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[ArrToAddress]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[ArrToAddress.Concat(ArrCcAddress).ToArray.Where(Function(x) Not x = "" AND Not (x.Contains("@smflc.co.jp") OR x.Contains("@smasfleet.co.jp"))).ToArray]</InArgument>
        </Assign.Value>
      </Assign>
      <Sequence DisplayName="Set To And CC" sap2010:WorkflowViewState.IdRef="Sequence_17">
        <Assign sap2010:WorkflowViewState.IdRef="Assign_20">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[OutToAddress]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[in_MailDictionary("宛先").TrimEnd(";"c)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_21">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[OutCcAddress]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[in_MailDictionary("CC").TrimEnd(";"c)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_33">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[ForcedMailAddress]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[in_MailForcedAddress]</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
      <If sap2010:Annotation.AnnotationText="許可以外のドメインが入っている場合：宛先とCCを強制的に変更します" Condition="[ArrToAddress.Length &gt; 0]" sap2010:WorkflowViewState.IdRef="If_1">
        <If.Then>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_10">
            <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[OutToAddress]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[ForcedMailAddress]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_17">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[OutCcAddress]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[ForcedMailAddress]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[OutMessage]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">["社外メールアドレス（ " + String.Join(";",ArrToAddress) + " ）がふくまれたため、強制的に配信先を " + ForcedMailAddress + " に変更しています"]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_15">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[in_MailDictionary("本文")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[OutMessage + CHR(10) + in_MailDictionary("本文")]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
      </If>
    </Sequence>
    <ui:ForEach x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="添付ファイル" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[in_MailAttachments]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="item" />
          </ActivityAction.Argument>
          <If Condition="[item &lt;&gt; &quot;&quot;]" sap2010:WorkflowViewState.IdRef="If_7">
            <If.Then>
              <InvokeMethod DisplayName="Invoke method" sap2010:WorkflowViewState.IdRef="InvokeMethod_6" MethodName="Add">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="snm:AttachmentCollection">[MailMessage.Attachments]</InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="snm:Attachment">[New System.Net.Mail.Attachment(item)]</InArgument>
              </InvokeMethod>
            </If.Then>
          </If>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <If sap2010:Annotation.AnnotationText="Image 保存せずに、メール本文に貼る OR 添付" Condition="[in_MailImage IsNot Nothing]" sap2010:WorkflowViewState.IdRef="If_4">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_24">
          <Assign sap2010:WorkflowViewState.IdRef="Assign_38">
            <Assign.To>
              <OutArgument x:TypeArguments="si:MemoryStream">[Ms]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="si:MemoryStream">[New System.IO.MemoryStream(in_MailImage.ByteArray)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_39">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int64">[Ms.Position]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int64">0</InArgument>
            </Assign.Value>
          </Assign>
          <InvokeMethod DisplayName="Invoke method" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="Add">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="snm:AttachmentCollection">[MailMessage.Attachments]</InArgument>
            </InvokeMethod.TargetObject>
            <InArgument x:TypeArguments="snm:Attachment">[New System.Net.Mail.Attachment(Ms, "Error.jpg","image/jpg")]</InArgument>
          </InvokeMethod>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_37">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[ImageUrl]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">["&lt;img src='cid:Error.jpg' alt='Default : Smiley face' &gt;"]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
    </If>
    <Assign DisplayName="件名" sap2010:WorkflowViewState.IdRef="Assign_23">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[MailMessage.Subject]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_MailDictionary("件名")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="本文" sap2010:WorkflowViewState.IdRef="Assign_22">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[MailMessage.Body]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_MailDictionary("本文")+CHR(10)+ImageUrl]</InArgument>
      </Assign.Value>
    </Assign>
    <If sap2010:Annotation.AnnotationText="Image 保存せずに、メール本文に貼る OR 添付" Condition="[in_MailImage IsNot Nothing OR in_MailIsHtmlBody]" sap2010:WorkflowViewState.IdRef="If_6">
      <If.Then>
        <ui:SendExchangeMail Bcc="{x:Null}" Body="{x:Null}" Domain="{x:Null}" Server="{x:Null}" Subject="{x:Null}" TimeoutMS="{x:Null}" Cc="[OutCcAddress]" DisplayName="Send Exchange Mail Message " EmailAutodiscover="[Credential.Username]" ExchangeVersion="Exchange2007_SP1" From="[In_MailDictionary(&quot;差出人&quot;)]" sap2010:WorkflowViewState.IdRef="SendExchangeMail_3" IsBodyHtml="True" IsDraft="False" MailMessage="[MailMessage]" Name="[In_MailDictionary(&quot;差出人&quot;)]" Password="[Credential.Password]" SaveCopy="False" To="[OutToAddress]" User="[Credential.Username]" />
      </If.Then>
      <If.Else>
        <ui:SendExchangeMail Bcc="{x:Null}" Body="{x:Null}" Domain="{x:Null}" Server="{x:Null}" Subject="{x:Null}" TimeoutMS="{x:Null}" Cc="[OutCcAddress]" DisplayName="Send Exchange Mail Message " EmailAutodiscover="[Credential.Username]" ExchangeVersion="Exchange2007_SP1" From="[In_MailDictionary(&quot;差出人&quot;)]" sap2010:WorkflowViewState.IdRef="SendExchangeMail_4" IsBodyHtml="False" IsDraft="False" MailMessage="[MailMessage]" Name="[In_MailDictionary(&quot;差出人&quot;)]" Password="[Credential.Password]" SaveCopy="False" To="[OutToAddress]" User="[Credential.Username]" />
      </If.Else>
    </If>
    <If Condition="[Ms IsNot Nothing]" sap2010:WorkflowViewState.IdRef="If_5">
      <If.Then>
        <InvokeMethod DisplayName="Invoke method" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="Close">
          <InvokeMethod.TargetObject>
            <InArgument x:TypeArguments="si:MemoryStream">[Ms]</InArgument>
          </InvokeMethod.TargetObject>
        </InvokeMethod>
      </If.Then>
    </If>
    <sads:DebugSymbol.Symbol>d0NDOlxVc2Vyc1wxMjAwMDAzMzdcRG9jdW1lbnRzXFVpUGF0aFxmY19NaW1laWhlblxUb29sXFNlbmRfTWFpbC54YW1saAHQAQHqAQEFAZYBAaoBAQQBYQF3AQMBjQIBkwIBAnsDjgMOAgEBgQE7gQFQAgEDhQE4hQFhAgEChwEF0AEVAwGRAdEBBdEBpAIDAYoB0gEF1gEKAwGFAdcBBbQCEAIBULUCBccCEgIBRcgCBesCCgIBMewCBfMCDgIBLPQCBfsCDgIBKPwCBYMDCgIBCoQDBYwDCgIBBNEB7wHRAYACAwGPAdEBigLRAaECAwGOAdEB3QHRAecBAwGMAdEBmwHRAbgBAwGLAdIBUdIBWwMBhgHUAQnUAYkBAwGIAdwBB+MBEAMBgQHkAQfrARACAX3sAQfzARACAXn0AQeNAhICAWmOAgezAgwCAVG1AqMBtQK5AQIBTrsCC8QCEAIBRsgCUsgCcAIBMsoCCekCFAIBM/ECMPECSQIBL+4CMe4CRgIBLfkCMPkCWgIBK/YCMfYCQwIBKfwCUvwChQECAQv+Agn+AsQEAgEagQMJgQPFBAIBDIQDE4QDJwIBBYYDCYoDGAIBB9QBGtQBXAMBiQHhATThAWEDAYQB3gE13gFDAwGCAekBNOkBYQMBgAHmATXmAUMCAX7xATTxAcwBAgF87gE17gFDAgF69QEJ/AESAgF0/QEJhAISAgFvhQIJjAISAgFqjgJbjgJ5AgFSkAILsQIWAgFUuwIZuwI3AgFHvQIPwgIeAgFJywIL0gIUAgFB0wIL2gIUAgE92wIL4AIaAgE44QIL6AIUAgE0/gKUBP4CpAQCASb+AowB/gKcAQIBJP4CqgT+AsEEAgEj/gLZAf4C8AECASL+ApkC/gK/AgIBIP4C6AP+Av8DAgEf/gKjA/4CsgMCAR3+ArgD/gLeAwIBG4EDlQSBA6UEAgEYgQOMAYEDnAECARaBA6sEgQPCBAIBFYED2QGBA/ABAgEUgQOZAoEDvwICARKBA+kDgQOABAIBEYEDpAOBA7MDAgEPgQO5A4ED3wMCAQ2IAzuIAz8CAQj6ATT6AVsCAXf3ATX3AUMCAXWCAjSCAlsCAXL/ATX/AUMCAXCKAjSKAkoCAW2HAjWHAkgCAWuRAg2YAhYCAWSZAg2gAhYCAV+hAg2oAhYCAVmpAg2wAhYCAVW/Akq/AmMCAUzBAj7BAmQCAUrQAj3QAnECAUTNAj7NAkICAULYAjXYAjYCAUDVAjbVAkMCAT7dAkbdAl8CATvfAjrfAncCATnmAjbmAnYCATfjAjfjAkECATWWAjiWAksCAWeTAjmTAkcCAWWeAjieAksCAWKbAjmbAkcCAWCmAjimAqIBAgFcowI5owJFAgFargI4rgJoAgFYqwI5qwJSAgFW</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="244,62" />
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="244,62" />
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="244,62" />
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="244,62" />
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="244,62" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="244,62" />
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="244,62" />
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="266,798">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="200,54">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_1" sap:VirtualizedContainerService.HintSize="464,54">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetSecureCredential_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="464,246">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="244,62" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="244,62" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="244,62" />
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="244,62" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="244,62" />
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="244,62" />
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="244,54">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="244,62" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="244,62" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="244,62" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="244,62" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="200,54">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="244,120">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="464,54">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_6" sap:VirtualizedContainerService.HintSize="222,140" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="464,296" />
      <sap2010:ViewStateData Id="ForEach`1_2" sap:VirtualizedContainerService.HintSize="464,84">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="244,62" />
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="244,62" />
      <sap2010:ViewStateData Id="InvokeMethod_3" sap:VirtualizedContainerService.HintSize="244,140" />
      <sap2010:ViewStateData Id="Assign_37" sap:VirtualizedContainerService.HintSize="244,62" />
      <sap2010:ViewStateData Id="Sequence_24" sap:VirtualizedContainerService.HintSize="200,54">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="464,102">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="SendExchangeMail_3" sap:VirtualizedContainerService.HintSize="314,155" />
      <sap2010:ViewStateData Id="SendExchangeMail_4" sap:VirtualizedContainerService.HintSize="314,155" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="464,102">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_5" sap:VirtualizedContainerService.HintSize="222,140" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="464,296" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="486,1706">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Send_Mail_1" sap:VirtualizedContainerService.HintSize="526,1786" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>